syntax = "proto3";

message BlockchainInfoResponse {
  int32 networkID = 1;
  string name = 2;

}

message BlockchainInfoRequest {
  int32 networkID = 1;
  string myWalletAddress = 2;
  bytes pubKey = 3;
}

message BlockHeader {
  int64 networkID = 1;
  int64 version = 2;
  bytes merkleRoot = 4;
  bytes txMerkleRoot = 5;
  bytes info = 6;
  int64 timestamp = 7;
  int64 number = 8;
}

message Block {
  BlockHeader head = 1;
  bytes signature = 2;

}

message Action {
  string contract = 1;
  string actionName = 2;
  string data = 3;
}

message Tx {
  int64 time = 1;
  int64 expiration = 2;
  int64 gasLimit = 3;
  int64 gasRatio = 4;
  repeated Action actions = 5;
  repeated string signers = 6;
  repeated bytes signatures = 7;
  string publisher = 8;
  repeated bytes publishSignatures = 9;
  int64 delay = 10;
  uint32 chain_id = 11;
  bytes referredTx = 12;
  Amount amountLimit = 13;
  bytes reserved = 14;
}

message Receipt {
  string funcName = 1;
  string content = 2;
}

message Status {
  int32 code = 1;
  string message = 2;
}

message TxReceipt {
  bytes txHash = 1;
  int64 gasUsage = 2;
  map<string, int64> ramUsage = 3;
  Status status = 4;
  repeated string returns = 5;
  repeated Receipt receipts = 6;
}

message Info {
  string lang = 1;
  string version = 2;
  repeated ABI abi = 3;
}

message ABI {
  string name = 1;
  repeated string args = 2;
  repeated Amount amountLimit = 3;
}

message Amount {
  string token = 1;
  string val = 2;
}

message Contract {
  string ID = 1;
  Info info = 2;
  string code = 3;
  string origCode = 4;
}

message BlockCacheMessage {
  bytes data = 1;
  bcMessageType type = 2;

}

enum bcMessageType {
  LinkType = 0;

}

message BlockCacheRaw {
  bytes blockBytes = 1;
  int64 serialNum = 2;
}

message MerkleTree {
  repeated bytes hash_list = 1;
  map<string, int32> hash2_idx = 2;
  int32  leaf_num = 3;
}

message TXRMerkleTree {
  MerkleTree mt = 1;
  map<string, bytes> tx2_txr = 2;
}

